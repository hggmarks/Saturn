# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions
name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  Quality:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=30s
          --health-retries=10
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v2
      - name: Install Python 3
        uses: actions/setup-python@v4
        with:
          python-version: 3.10.12
      - name: Set up .env file
        run: |
          echo "DATABASE_URL_TEST=postgres://postgres:postgres@localhost:5432/saturn_test" >> .env
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run Tests
        run: pytest

  release:
    needs: Quality
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, 'chore(release):')
    runs-on: ubuntu-latest
    concurrency: release
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python 3.10.16
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.16
      - name: Install dependencies
        run: |
          python -m pip install poetry --upgrade pip
          poetry config virtualenvs.create false
          poetry install
      - name: Python Semantic Release
        run: |
          pip install python-semantic-release
          git config --global user.name "github-actions"
          git config --global user.email "action@github.com"
      
      - name: Publish
        run: semantic-release publish
        env:
          github_token: ${{ secrets.GITHUB_TOKEN }}
